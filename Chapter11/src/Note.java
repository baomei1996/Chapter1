public class Note {
/*
1. java.lang 패키지
- 프로그래밍시 import 하지 않아도 자동으로 import 됨
- import java.lang.*; 문장이 추가 됨
- 많이 사용하는 기본 클리스들이 속한 패키지
- String, Integer, System 등

2. Object Class
- 모든 클래스의 최상위 클래스
- java.lang.Object 클래스
- 모든 클래스는 Object 클래스에서 상속받은
- 모든 클래스는 Object 클래스의 메서드를 사용할 수 있음
- 모든 클래스는 Object 클래스의 메서드중 일부는 재정의 할 수 있음
  (final 로 선언된 메서드는 재정의 할 수 없음)
- 컴파일러가 extends Object 를 추가함

3. Object 클래스 메서드

       메서드                     |       설명
   Sting toString()              | - 객체를 문자열로 표현하여 반환합니다. 재정의하여 객체에 대한 설명이나 특정 멤버변수 값을 반환합니다.
   Boolean equals(Object obj)    | - 두 인스턴스가 동일한지 여부를 반환합니다. 재정의하여 논리적으로 동일한 인스턴스임을 정의할 수 있습니다.
   int hashCode()                | - 객체의 해시 코드 값을 반환합니다.
   Object clone()                | - 객체를 복제하여 동일한 멤버 변수 값을 가진 새로운 인스턴스를 생성합니다.
   Class getClass()              | - 객체의 Class 클래스를 반환합니다.
   void finalize()               | - 인스턴스가 힙 메모리에서 제거될 때 가비지 컬렉터에 의해 호출되는 메서드 입니다.
                                      네트워크 연결해제, 열려 있는 파일 스트링 해제 등을 구현합니다.
   void wait()                   | - 멀티스레드 프로그램에서 사용하는 메서드 입니다. 스레드를 '기다리는 상태' (non runnable) 로 만듭니다.
   void notify()                 | - wait() 메서드에 의해 기다리고 있는 스레드를 실행 가능한 상태 runnable 로 가져옵니다.

4. toString() 메서드
- Object 클래스이 메서드
- 객체의 정보를 String 으로 바꾸어서 사용할 때 많이 쓰임
- String 이나 Integer 클래스에는 이미 재정의 되어 있음
- Sting 은 문자열 반환
- Integer 는 정수 값 반환

5. equals() 메서드
- 두 인스턴스의 주소값을 비교하여 true/false 를 반환
- 재정의 하여 두 인스턴스가 논리적으로 동일함의 여부를 반환
- 같은 학번의 학생인 경우 여러 인스턴스의 주소값은 다르지만, 같은 학생으로 처리해야 학점이나
  정보 산출에 문제가 생기지 않으므로 이런 경우 equals() 메서드를 재정의 함

6. hashCode() 메서드
- hash : 정보를 저장, 검색하기 위해 사용하는 자료구조
- 자료의 특정 값(키 값)에 대해 저장위치를 반환해주는 해시 함수를 사용함
- 해시 함수는 어떤 정보인가에 따라 다르게 구현됨
- hashCode()메서드는 인스턴스의 저장 주소를 반환함
- 힙 메모리 인스턴스가 저장되는 방식이 hash
- hashCode() 의 반환값 : 자바 가상 머신이 저장한 인스턴스의 주소값을 10진수로 나타냄
- 서로다른 메모리의 두 인스턴스가 같다면??
  재정의 된 equals() 메서드의 값이 ture 동일한 hashCode() 반환값을 가져야 함
- 논리적 동일함을 위해 equals() 메서드를 재정의 하였다면 hashCode() 메서드로 재정의 하여 동일한 값이 반환되도록 함
- String 클래스 : 동일한 문자열 인스턴스에 대해 동이한 정수가 반환됨
- Integer 클래스 : 동일한 정수값의 인스턴스에 대해 같은 정수값이 반환됨

7. clone() 메서드
- 객체의 원본을 복제하는데 사용하는 메서드
- 원본을 유지해 놓고 복사본을 사용할 때
- 기본 틀(prototype) 을 두고 복잡한 생성과적을 반복하지 않고 복제
- clone() 메서드를 사용하면 객체의 정보 (멤버변수 값) 과 같은 인스턴스가 또 생성되는 것이므로
  객체지향 프로그램의 정보은닉, 객체 보호의 관점에서 위배될 수 있음
- 객체의 clone() 메서드 사용을 허용한다는 의미로 cloneable 인터페이스를 명시해줌
 */
}